import { configureStore } from '@reduxjs/toolkit';
import {
  artifactsProgressReducer,
  authKeyReducer,
  backGesturesReducer,
  erc20BalanceNetworkReducer,
  erc20BalanceRailgunReducer,
  liquidityReducer,
  merkletreeHistoryScanReducer,
  networkPricesReducer,
  networkReducer,
  nftBalanceNetworkReducer,
  nftBalanceRailgunReducer,
  nftsMetadataReducer,
  omittedPrivateTokensReducer,
  poiProofProgressReducer,
  proofProgressReducer,
  relayerBlocklistReducer,
  relayerSkiplistReducer,
  relayerStatusReducer,
  remoteConfigReducer,
  savedAddressesReducer,
  savedTransactionsReducer,
  ShieldPOICountdownToastReducer,
  tempNotificationReducer,
  toastReducer,
  transactionHistoryStatusReducer,
  transactionsMissingTimestampReducer,
  txidVersionReducer,
  vaultsReducer,
  walletsReducer,
} from './reducers';

export const store = configureStore({
  reducer: {
    artifactsProgress: artifactsProgressReducer,
    remoteConfig: remoteConfigReducer,
    wallets: walletsReducer,
    network: networkReducer,
    networkPrices: networkPricesReducer,
    erc20BalancesNetwork: erc20BalanceNetworkReducer,
    erc20BalancesRailgun: erc20BalanceRailgunReducer,
    nftBalancesNetwork: nftBalanceNetworkReducer,
    nftBalancesRailgun: nftBalanceRailgunReducer,
    nftsMetadata: nftsMetadataReducer,
    savedAddresses: savedAddressesReducer,
    toast: toastReducer,
    savedTransactions: savedTransactionsReducer,
    backGestures: backGesturesReducer,
    authKey: authKeyReducer,
    relayerStatus: relayerStatusReducer,
    relayerSkiplist: relayerSkiplistReducer,
    relayerBlocklist: relayerBlocklistReducer,
    merkletreeHistoryScan: merkletreeHistoryScanReducer,
    proofProgress: proofProgressReducer,
    transactionsMissingTimestamp: transactionsMissingTimestampReducer,
    transactionHistoryStatus: transactionHistoryStatusReducer,
    tempNotification: tempNotificationReducer,
    vaults: vaultsReducer,
    liquidity: liquidityReducer,
    txidVersion: txidVersionReducer,
    poiProofProgress: poiProofProgressReducer,
    shieldPOICountdownToast: ShieldPOICountdownToastReducer,
    omittedPrivateTokens: omittedPrivateTokensReducer,
  },
  devTools: false,
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;
